{
    "code_solutions": [
      {
        "prompts": [
          "Write a Python function to add two numbers.",
          "Write a Python function to add two numbers.",
          "Add two numbers using Python function.",
          "Create a method in Python to sum two integers.",
          "How can I write a function to return the sum of two numbers?",
          "Add two numbers using Python function.",
          "Create a method in Python to sum two integers.",
          "How can I write a function to return the sum of two numbers?"
        ],
        "code": "def add(a, b):\n    return a + b",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to check if a number is even.",
          "Write a Python function to check if a number is even.",
          "Check if a number is even in Python.",
          "Write a function to tell if a number is divisible by 2.",
          "Create a Python method to check even number.",
          "Check if a number is even in Python.",
          "Write a function to tell if a number is divisible by 2.",
          "Create a Python method to check even number.",
          "Write a Python function to determine if a number is even.",
          "Check whether the given number is divisible by 2.",
          "Is the number passed to the function even?"
        ],
        "code": "def is_even(n):\n    return n % 2 == 0",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to print Fibonacci sequence up to n terms.",
          "Generate Fibonacci series in Python.",
          "Print first n numbers in Fibonacci sequence.",
          "Python code to display n terms of Fibonacci series.",
          "Generate Fibonacci series in Python.",
          "Print first n numbers in Fibonacci sequence.",
          "Python code to display n terms of Fibonacci series."
        ],
        "code": "def fibonacci(n):\n    a, b = 0, 1\n    for _ in range(n):\n        print(a)\n        a, b = b, a + b",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to calculate factorial of a number.",
          "Write a Python function to calculate the factorial of a number.",
          "Get factorial of a number using recursion.",
          "Write a recursive function to find factorial.",
          "What is the factorial of a number in Python?"
        ],
        "code": "def factorial(n):\n    if n == 0:\n        return 1\n    return n * factorial(n - 1)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to reverse a string.",
          "Create a function to reverse a string.",
          "Reverse the characters in the input string.",
          "Flip the order of letters in a string using Python."
        ],
        "code": "def reverse_string(s):\n    return s[::-1]",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to check if a string is a palindrome.",
          "Write a Python function to check if a string is a palindrome."
        ],
        "code": "def is_palindrome(s):\n    return s == s[::-1]",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to calculate the square root of a number."
        ],
        "code": "def square_root(n):\n    return n ** 0.5",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to find the maximum element in a list.",
          "Write a Python function to find the maximum value in a list."
        ],
        "code": "def find_max(lst):\n    return max(lst)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to remove duplicates from a list.",
          "Write a Python function to remove duplicates from a list."
        ],
        "code": "def remove_duplicates(lst):\n    return list(set(lst))",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to sort a list in ascending order."
        ],
        "code": "def sort_list(lst):\n    return sorted(lst)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to count the vowels in a string.",
          "Write a Python function to count the number of vowels in a string."
        ],
        "code": "def count_vowels(s):\n    return sum(1 for c in s.lower() if c in 'aeiou')",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to merge two dictionaries.",
          "Write a Python function to merge two dictionaries."
        ],
        "code": "def merge_dicts(d1, d2):\n    return {**d1, **d2}",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to check if a number is prime."
        ],
        "code": "def is_prime(n):\n    if n < 2:\n        return False\n    for i in range(2, int(n ** 0.5) + 1):\n        if n % i == 0:\n            return False\n    return True",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to calculate the length of a string without using len()."
        ],
        "code": "def custom_len(s):\n    count = 0\n    for _ in s:\n        count += 1\n    return count",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to find the GCD of two numbers."
        ],
        "code": "def gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to reverse the words in a sentence."
        ],
        "code": "def reverse_words(sentence):\n    return ' '.join(sentence.split()[::-1])",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to convert Celsius to Fahrenheit."
        ],
        "code": "def celsius_to_fahrenheit(c):\n    return (c * 9/5) + 32",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to count the frequency of each character in a string."
        ],
        "code": "def char_frequency(s):\n    freq = {}\n    for char in s:\n        freq[char] = freq.get(char, 0) + 1\n    return freq",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to check if a string is anagram of another."
        ],
        "code": "def is_anagram(s1, s2):\n    return sorted(s1) == sorted(s2)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to flatten a nested list."
        ],
        "code": "def flatten(lst):\n    result = []\n    for i in lst:\n        if isinstance(i, list):\n            result.extend(flatten(i))\n        else:\n            result.append(i)\n    return result",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to find the second largest number in a list."
        ],
        "code": "def second_largest(lst):\n    unique = list(set(lst))\n    unique.sort()\n    return unique[-2] if len(unique) >= 2 else None",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to convert a number to binary."
        ],
        "code": "def to_binary(n):\n    return bin(n)[2:]",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to check if all elements in a list are unique."
        ],
        "code": "def all_unique(lst):\n    return len(lst) == len(set(lst))",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to calculate the sum of digits of a number."
        ],
        "code": "def sum_of_digits(n):\n    return sum(int(d) for d in str(n))",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to calculate the nth Fibonacci number."
        ],
        "code": "def fibonacci(n):\n    if n <= 1:\n        return n\n    return fibonacci(n-1) + fibonacci(n-2)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to capitalize the first letter of each word in a string."
        ],
        "code": "def capitalize_words(s):\n    return ' '.join(word.capitalize() for word in s.split())",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to check if a number is prime."
        ],
        "code": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to generate a list of squares from 1 to n."
        ],
        "code": "def generate_squares(n):\n    return [i**2 for i in range(1, n+1)]",
        "language": "python"
      },
      {
        "prompts": [
          "Create a Python function that adds two numbers."
        ],
        "code": "def add_numbers(x, y):\n    return x + y",
        "language": "python"
      },
      {
        "prompts": [
          "How do I sum two integers in Python?"
        ],
        "code": "def sum_integers(a, b):\n    return a + b",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to read a file and print its content.",
          "Write a Python program to read a text file and print its contents."
        ],
        "code": "with open('file.txt', 'r') as file:\n    content = file.read()\n    print(content)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to find the maximum number in a list."
        ],
        "code": "numbers = [10, 20, 45, 3]\nmax_num = max(numbers)\nprint(max_num)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to count the vowels in a string."
        ],
        "code": "def count_vowels(s):\n    return sum(1 for char in s.lower() if char in 'aeiou')\n\nprint(count_vowels('Hello World'))",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to sort a list of numbers."
        ],
        "code": "numbers = [5, 2, 9, 1]\nnumbers.sort()\nprint(numbers)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to check if a number is prime."
        ],
        "code": "def is_prime(n):\n    if n <= 1:\n        return False\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n    return True\n\nprint(is_prime(7))",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to print all numbers from 1 to 10."
        ],
        "code": "for i in range(1, 11):\n    print(i)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program to check if a number is positive, negative, or zero."
        ],
        "code": "def check_number(n):\n    if n > 0:\n        print(\"Positive\")\n    elif n < 0:\n        print(\"Negative\")\n    else:\n        print(\"Zero\")",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to sum all elements in a list."
        ],
        "code": "def sum_list(lst):\n    return sum(lst)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program using list comprehension to get squares of numbers from 1 to 10."
        ],
        "code": "squares = [x**2 for x in range(1, 11)]\nprint(squares)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to handle division by zero using try-except."
        ],
        "code": "def safe_divide(a, b):\n    try:\n        return a / b\n    except ZeroDivisionError:\n        return \"Cannot divide by zero\"",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python class representing a simple Dog."
        ],
        "code": "class Dog:\n    def __init__(self, name):\n        self.name = name\n\n    def bark(self):\n        print(f\"{self.name} says woof!\")",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python script to read contents of a file called data.txt."
        ],
        "code": "with open('data.txt', 'r') as file:\n    content = file.read()\n    print(content)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python script that fetches data from a URL using the requests library."
        ],
        "code": "import requests\nresponse = requests.get('https://api.example.com')\nprint(response.text)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program using NumPy to create a 3x3 identity matrix."
        ],
        "code": "import numpy as np\nidentity_matrix = np.eye(3)\nprint(identity_matrix)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python script using pandas to read a CSV file."
        ],
        "code": "import pandas as pd\ndf = pd.read_csv('data.csv')\nprint(df.head())",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python for loop to print numbers from 1 to 5."
        ],
        "code": "for i in range(1, 6):\n    print(i)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program using if-else to check if a number is positive."
        ],
        "code": "num = 5\nif num > 0:\n    print(\"Positive\")\nelse:\n    print(\"Non-positive\")",
        "language": "python"
      },
      {
        "prompts": [
          "Write a list comprehension to get squares of numbers from 1 to 5."
        ],
        "code": "squares = [x**2 for x in range(1, 6)]\nprint(squares)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python try-except block to handle division by zero."
        ],
        "code": "try:\n    result = 10 / 0\nexcept ZeroDivisionError:\n    print(\"Cannot divide by zero\")",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python class representing a Car with brand and year."
        ],
        "code": "class Car:\n    def __init__(self, brand, year):\n        self.brand = brand\n        self.year = year\n\n    def display(self):\n        print(f\"{self.brand} - {self.year}\")",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function using numpy to create an array of zeros."
        ],
        "code": "import numpy as np\nzeros_array = np.zeros((3, 3))\nprint(zeros_array)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python program using pandas to create a DataFrame."
        ],
        "code": "import pandas as pd\ndata = {'name': ['Alice', 'Bob'], 'age': [25, 30]}\ndf = pd.DataFrame(data)\nprint(df)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python function to sort a list of numbers."
        ],
        "code": "def sort_list(numbers):\n    return sorted(numbers)",
        "language": "python"
      },
      {
        "prompts": [
          "Write a Python while loop to count from 1 to 3."
        ],
        "code": "i = 1\nwhile i <= 3:\n    print(i)\n    i += 1",
        "language": "python"
      }
    ]
  }